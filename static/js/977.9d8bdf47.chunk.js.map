{"version":3,"file":"static/js/977.9d8bdf47.chunk.js","mappings":"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","sources":["../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/joy/Badge/badgeClasses.js","../node_modules/@mui/joy/Badge/Badge.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/joy/Box/Box.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Unstable_Grid/gridGenerator.js","../node_modules/@mui/system/esm/Unstable_Grid/createGrid.js","../node_modules/@mui/material/esm/Unstable_Grid2/Grid2.js","../node_modules/@mui/system/node_modules/clsx/dist/clsx.m.js","../node_modules/prismjs/components/prism-clike.js","../node_modules/prismjs/components/prism-core.js","../node_modules/prismjs/components/prism-python.js","../node_modules/react-simple-code-editor/src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('JoyBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('JoyBadge', ['root', 'badge', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'colorPrimary', 'colorDanger', 'colorInfo', 'colorNeutral', 'colorSuccess', 'colorWarning', 'invisible', 'locationInside', 'locationOutside', 'sizeSm', 'sizeMd', 'sizeLg', 'variantOutlined', 'variantSoft', 'variantSolid']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"component\", \"componentsProps\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSlotProps } from '@mui/base/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.size === 'sm' && _extends({\n  '--Badge-minHeight': '0.5rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1rem'\n}, {\n  '--Badge-paddingX': '0.25rem',\n  fontSize: theme.vars.fontSize.xs\n}), ownerState.size === 'md' && _extends({\n  '--Badge-minHeight': '0.75rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.25rem'\n}, {\n  '--Badge-paddingX': '0.375rem',\n  fontSize: theme.vars.fontSize.sm\n}), ownerState.size === 'lg' && _extends({\n  '--Badge-minHeight': '1rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.5rem'\n}, {\n  '--Badge-paddingX': '0.5rem',\n  fontSize: theme.vars.fontSize.md\n}), {\n  '--Badge-ringSize': '2px',\n  '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n}));\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(({\n  theme,\n  ownerState\n}) => {\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;\n\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n\n  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'top' ? '0%' : '100%';\n  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'left' ? '0%' : '100%';\n  return _extends({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: 1,\n    padding: 'calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth)) calc(var(--Badge-paddingX) - var(--variant-borderWidth))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: 1,\n    transition: 'transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, ownerState.invisible && {\n    transition: 'transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeInset: badgeInsetProp = 0,\n    children,\n    component = 'span',\n    componentsProps = {},\n    size: sizeProp = 'md',\n    color: colorProp = 'primary',\n    invisible: invisibleProp = false,\n    max = 99,\n    badgeContent: badgeContentProp = '',\n    showZero = false,\n    variant: variantProp = 'solid'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n\n  const rootProps = useSlotProps({\n    elementType: BadgeRoot,\n    ownerState,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    className: classes.root\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeBadge,\n    ownerState,\n    externalSlotProps: componentsProps.badge,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(BadgeRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The props used for each slot inside the component.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport defaultTheme from '../styles/defaultTheme';\nimport styleFunctionSx from '../styles/styleFunctionSx';\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'JoyBox-root',\n  generateClassName: ClassNameGenerator.generate,\n  styleFunctionSx\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport const traverseBreakpoints = (breakpoints, responsize, iterator) => {\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsize)) {\n    responsize.forEach((breakpointValue, index) => {\n      iterator((responsizeStyles, style) => {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsizeStyles, style);\n          } else {\n            responsizeStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsize && typeof responsize === 'object') {\n    // prevent null\n    // responsize could be a very big object, pick the smallest responsive values\n    const keys = Object.keys(responsize).length > breakpoints.keys.length ? breakpoints.keys : Object.keys(responsize);\n    keys.forEach(key => {\n      if (breakpoints.keys.indexOf(key) !== -1) {\n        // @ts-ignore already checked that responsize is an object\n        const breakpointValue = responsize[key];\n\n        if (breakpointValue !== undefined) {\n          iterator((responsizeStyles, style) => {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsizeStyles, style);\n            } else {\n              responsizeStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsize === 'number' || typeof responsize === 'string') {\n    iterator((responsizeStyles, style) => {\n      Object.assign(responsizeStyles, style);\n    }, responsize);\n  }\n};\nexport const generateGridSizeStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridSize, (appendStyle, value) => {\n    let style = {};\n\n    if (value === true) {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: `calc(100% * ${value} / var(--Grid-columns)${ownerState.nested && ownerState.container ? ` + var(--Grid-columnSpacing)` : ''})`\n      };\n    }\n\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridOffsetStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridOffset, (appendStyle, value) => {\n    let style = {};\n\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / var(--Grid-columns))`\n      };\n    }\n\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridColumnsStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = {\n    '--Grid-columns': 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\n    appendStyle(styles, {\n      '--Grid-columns': value\n    });\n  });\n  return styles;\n};\nexport const generateGridRowSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\n    var _theme$spacing;\n\n    appendStyle(styles, {\n      '--Grid-rowSpacing': typeof value === 'string' ? value : (_theme$spacing = theme.spacing) == null ? void 0 : _theme$spacing.call(theme, value)\n    });\n  });\n  return styles;\n};\nexport const generateGridColumnSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\n    var _theme$spacing2;\n\n    appendStyle(styles, {\n      '--Grid-columnSpacing': typeof value === 'string' ? value : (_theme$spacing2 = theme.spacing) == null ? void 0 : _theme$spacing2.call(theme, value)\n    });\n  });\n  return styles;\n};\nexport const generateGridDirectionStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport const generateGridStyles = ({\n  ownerState\n}) => {\n  return _extends({\n    minWidth: 0,\n    boxSizing: 'border-box'\n  }, ownerState.container ? _extends({\n    display: 'flex',\n    flexWrap: 'wrap'\n  }, ownerState.wrap && ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  }, {\n    margin: `calc(var(--Grid-rowSpacing) / -2) calc(var(--Grid-columnSpacing) / -2)`\n  }, ownerState.disableEqualOverflow && {\n    margin: `calc(var(--Grid-rowSpacing) * -1) 0px 0px calc(var(--Grid-columnSpacing) * -1)`\n  }, ownerState.nested ? _extends({\n    padding: `calc(var(--Grid-nested-rowSpacing) / 2) calc(var(--Grid-nested-columnSpacing) / 2)`\n  }, (ownerState.disableEqualOverflow || ownerState.parentDisableEqualOverflow) && {\n    padding: `calc(var(--Grid-nested-rowSpacing)) 0px 0px calc(var(--Grid-nested-columnSpacing))`\n  }) : {\n    '--Grid-nested-rowSpacing': 'var(--Grid-rowSpacing)',\n    '--Grid-nested-columnSpacing': 'var(--Grid-columnSpacing)'\n  }) : _extends({\n    padding: `calc(var(--Grid-rowSpacing) / 2) calc(var(--Grid-columnSpacing) / 2)`\n  }, ownerState.disableEqualOverflow && {\n    padding: `calc(var(--Grid-rowSpacing)) 0px 0px calc(var(--Grid-columnSpacing))`\n  }));\n};\nexport const generateSizeClassNames = gridSize => {\n  const classNames = [];\n  Object.entries(gridSize).forEach(([key, value]) => {\n    if (value !== false && value !== undefined) {\n      classNames.push(`grid-${key}-${String(value)}`);\n    }\n  });\n  return classNames;\n};\nexport const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs') => {\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n\n  if (isValidSpacing(spacing)) {\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\n  }\n\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    const classNames = [];\n    Object.entries(spacing).forEach(([key, value]) => {\n      if (isValidSpacing(value)) {\n        classNames.push(`spacing-${key}-${String(value)}`);\n      }\n    });\n    return classNames;\n  }\n\n  return [];\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"columns\", \"container\", \"component\", \"direction\", \"wrap\", \"spacing\", \"rowSpacing\", \"columnSpacing\", \"disableEqualOverflow\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport useTheme from '../useTheme';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { generateGridStyles, generateGridSizeStyles, generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridDirectionStyles, generateGridOffsetStyles, generateSizeClassNames, generateSpacingClassNames } from './gridGenerator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme(); // widening Theme to any so that the consumer can own the theme structure.\n\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\n\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiGrid',\n    defaultTheme\n  });\n}\n\nexport default function createGrid(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiGrid'\n  } = options;\n  const NestedContext = /*#__PURE__*/React.createContext(false);\n  const OverflowContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useUtilityClasses = (ownerState, theme) => {\n    const {\n      container,\n      direction,\n      spacing,\n      wrap,\n      gridSize\n    } = ownerState;\n    const slots = {\n      root: ['root', container && 'container', direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...generateSizeClassNames(gridSize), ...(container ? generateSpacingClassNames(spacing, theme.breakpoints.keys[0]) : [])]\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n\n  const GridRoot = createStyledComponent(generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridSizeStyles, generateGridDirectionStyles, generateGridStyles, generateGridOffsetStyles);\n  const Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    var _inProps$columns, _inProps$spacing, _ref, _inProps$rowSpacing, _ref2, _inProps$columnSpacin, _ref3, _disableEqualOverflow;\n\n    const theme = useTheme();\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n\n    const nested = React.useContext(NestedContext);\n    const overflow = React.useContext(OverflowContext);\n\n    const {\n      className,\n      columns: columnsProp = 12,\n      container = false,\n      component = 'div',\n      direction = 'row',\n      wrap = 'wrap',\n      spacing: spacingProp = 0,\n      rowSpacing: rowSpacingProp = spacingProp,\n      columnSpacing: columnSpacingProp = spacingProp,\n      disableEqualOverflow: themeDisableEqualOverflow\n    } = props,\n          rest = _objectWithoutPropertiesLoose(props, _excluded); // Because `disableEqualOverflow` can be set from the theme's defaultProps, the **nested** grid should look at the instance props instead.\n\n\n    let disableEqualOverflow = themeDisableEqualOverflow;\n\n    if (nested && themeDisableEqualOverflow !== undefined) {\n      disableEqualOverflow = inProps.disableEqualOverflow;\n    } // collect breakpoints related props because they can be customized from the theme.\n\n\n    const gridSize = {};\n    const gridOffset = {};\n    const other = {};\n    Object.entries(rest).forEach(([key, val]) => {\n      if (theme.breakpoints.values[key] !== undefined) {\n        gridSize[key] = val;\n      } else if (theme.breakpoints.values[key.replace('Offset', '')] !== undefined) {\n        gridOffset[key.replace('Offset', '')] = val;\n      } else {\n        other[key] = val;\n      }\n    });\n    const columns = (_inProps$columns = inProps.columns) != null ? _inProps$columns : nested ? undefined : columnsProp;\n    const spacing = (_inProps$spacing = inProps.spacing) != null ? _inProps$spacing : nested ? undefined : spacingProp;\n    const rowSpacing = (_ref = (_inProps$rowSpacing = inProps.rowSpacing) != null ? _inProps$rowSpacing : inProps.spacing) != null ? _ref : nested ? undefined : rowSpacingProp;\n    const columnSpacing = (_ref2 = (_inProps$columnSpacin = inProps.columnSpacing) != null ? _inProps$columnSpacin : inProps.spacing) != null ? _ref2 : nested ? undefined : columnSpacingProp;\n\n    const ownerState = _extends({}, props, {\n      nested,\n      columns,\n      container,\n      direction,\n      wrap,\n      spacing,\n      rowSpacing,\n      columnSpacing,\n      gridSize,\n      gridOffset,\n      disableEqualOverflow: (_ref3 = (_disableEqualOverflow = disableEqualOverflow) != null ? _disableEqualOverflow : overflow) != null ? _ref3 : false,\n      // use context value if exists.\n      parentDisableEqualOverflow: overflow // for nested grid\n\n    });\n\n    const classes = useUtilityClasses(ownerState, theme);\n\n    let result = /*#__PURE__*/_jsx(GridRoot, _extends({\n      ref: ref,\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className)\n    }, other));\n\n    if (!nested) {\n      result = /*#__PURE__*/_jsx(NestedContext.Provider, {\n        value: true,\n        children: result\n      });\n    }\n\n    if (disableEqualOverflow !== undefined && disableEqualOverflow !== (overflow != null ? overflow : false)) {\n      // There are 2 possibilities that should wrap with the OverflowContext to communicate with the nested grids:\n      // 1. It is the root grid with `disableEqualOverflow`.\n      // 2. It is a nested grid with different `disableEqualOverflow` from the context.\n      result = /*#__PURE__*/_jsx(OverflowContext.Provider, {\n        value: disableEqualOverflow,\n        children: result\n      });\n    }\n\n    return result;\n  });\n  process.env.NODE_ENV !== \"production\" ? Grid.propTypes\n  /* remove-proptypes */\n  = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n    columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    component: PropTypes.elementType,\n    container: PropTypes.bool,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    disableEqualOverflow: PropTypes.bool,\n    lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n    lgOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n    mdOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n    smOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n    wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n    xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n    xlOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n    xsOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number])\n  } : void 0;\n  return Grid;\n}","import PropTypes from 'prop-types';\nimport { createGrid } from '@mui/system/Unstable_Grid';\nimport { styled, useThemeProps } from '../styles';\nconst Grid2 = createGrid({\n  createStyledComponent: styled('div', {\n    name: 'MuiGrid2',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  componentName: 'MuiGrid2',\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiGrid2'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid2.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Grid2;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","import * as React from 'react';\n\ntype Padding<T> = T | { top?: T; right?: T; bottom?: T; left?: T };\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  // Props for the component\n  value: string;\n  onValueChange: (value: string) => void;\n  highlight: (value: string) => string | React.ReactNode;\n  tabSize: number;\n  insertSpaces: boolean;\n  ignoreTabKey: boolean;\n  padding: Padding<number | string>;\n  style?: React.CSSProperties;\n\n  // Props for the textarea\n  textareaId?: string;\n  textareaClassName?: string;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  form?: string;\n  maxLength?: number;\n  minLength?: number;\n  name?: string;\n  placeholder?: string;\n  readOnly?: boolean;\n  required?: boolean;\n  onClick?: React.MouseEventHandler<HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onBlur?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n\n  // Props for the hightlighted code’s pre element\n  preClassName?: string;\n};\n\ntype State = {\n  capture: boolean;\n};\n\ntype Record = {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n};\n\ntype History = {\n  stack: (Record & { timestamp: number })[];\n  offset: number;\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /Win/i.test(navigator.platform);\nconst isMacLike =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class Editor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  private _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  private _getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  private _recordChange = (record: Record, overwrite: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart)\n          .pop()\n          ?.match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart)\n          .pop()\n          ?.match(re);\n\n        if (previous?.[1] && current?.[1]?.startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  private _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  private _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  private _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  private _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  private _handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.keyCode === KEYCODE_ESCAPE) {\n      e.currentTarget.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText?.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart:\n            startLineText && /\\S/.test(startLineText)\n              ? selectionStart + tabCharacter.length\n              : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line?.match(/^\\s+/);\n\n        if (matches?.[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n        ? // Trigger redo with Ctrl+Y on Windows\n          e.ctrlKey && e.keyCode === KEYCODE_Y\n        : // Trigger redo with Ctrl+Shift+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState((state) => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  private _handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  private _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  private _input: HTMLTextAreaElement | null = null;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      textareaClassName,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      preClassName,\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: typeof padding === 'object' ? padding.top : padding,\n      paddingRight: typeof padding === 'object' ? padding.right : padding,\n      paddingBottom: typeof padding === 'object' ? padding.bottom : padding,\n      paddingLeft: typeof padding === 'object' ? padding.left : padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <pre\n          className={preClassName}\n          aria-hidden=\"true\"\n          style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        <textarea\n          ref={(c) => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={\n            className + (textareaClassName ? ` ${textareaClassName}` : '')\n          }\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n} as const;\n"],"names":["value","ref","React","current","getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeRoot","styled","name","overridesResolver","props","styles","root","theme","ownerState","_extends","size","badgeContent","fontSize","vars","xs","sm","md","palette","background","surface","position","display","verticalAlign","flexShrink","BadgeBadge","badge","_ownerState$anchorOri","_ownerState$anchorOri2","_ownerState$anchorOri3","_ownerState$anchorOri4","_theme$variants","inset","top","badgeInset","left","bottom","right","insetValues","split","length","translateY","anchorOrigin","vertical","translateX","horizontal","transformOriginY","transformOriginX","flexWrap","justifyContent","alignContent","alignItems","boxSizing","boxShadow","fontFamily","body","fontWeight","lineHeight","padding","minHeight","minWidth","borderRadius","zIndex","transition","backgroundColor","badgeClasses","transform","invisible","variants","variant","color","inProps","useThemeProps","anchorOriginProp","badgeInsetProp","children","component","componentsProps","sizeProp","colorProp","invisibleProp","max","badgeContentProp","showZero","variantProp","other","_objectWithoutPropertiesLoose","prevProps","usePreviousProps","classes","slots","capitalize","composeClasses","useUtilityClasses","displayValue","Number","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","className","badgeProps","_jsxs","_jsx","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","shouldForwardProp","prop","useTheme","_extendSxProp","extendSxProp","clsx","createBox","ClassNameGenerator","createStyled","traverseBreakpoints","breakpoints","responsize","iterator","smallestBreakpoint","keys","Array","isArray","forEach","breakpointValue","index","responsizeStyles","style","Object","assign","up","key","indexOf","undefined","generateGridSizeStyles","gridSize","appendStyle","flexBasis","flexGrow","maxWidth","width","nested","container","generateGridOffsetStyles","gridOffset","marginLeft","generateGridColumnsStyles","columns","generateGridRowSpacingStyles","rowSpacing","_theme$spacing","spacing","call","generateGridColumnSpacingStyles","columnSpacing","_theme$spacing2","generateGridDirectionStyles","direction","flexDirection","generateGridStyles","wrap","margin","disableEqualOverflow","parentDisableEqualOverflow","generateSizeClassNames","classNames","entries","push","String","generateSpacingClassNames","isValidSpacing","val","isNaN","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","Grid2","createStyledComponent","componentName","NestedContext","OverflowContext","GridRoot","Grid","_inProps$columns","_inProps$spacing","_ref","_inProps$rowSpacing","_ref2","_inProps$columnSpacin","_ref3","_disableEqualOverflow","themeProps","overflow","columnsProp","spacingProp","rowSpacingProp","columnSpacingProp","themeDisableEqualOverflow","rest","values","replace","result","Provider","createGrid","r","e","t","f","n","arguments","Prism","languages","clike","pattern","lookbehind","greedy","inside","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","map","o","prototype","toString","slice","objId","obj","defineProperty","clone","deepClone","visited","id","hasOwnProperty","v","i","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","extend","redef","insertBefore","before","insert","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","python","py","KEYCODE_Z","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","isWindows","test","navigator","platform","isMacLike","cssText","concat","_this","capture","input","_input","selectionStart","selectionEnd","_recordChange","substring","record","overwrite","_history","offset","extras","Math","timestamp","Date","now","last","re","previous","_getLines","pop","_a","_b","_c","startsWith","__assign","onValueChange","_updateInput","min","tabSize","insertSpaces","ignoreTabKey","onKeyDown","defaultPrevented","keyCode","currentTarget","blur","tabCharacter","repeat","state","preventDefault","shiftKey","startLine_1","linesBeforeCaret","endLine_1","nextValue","line","startLineText","_applyEdits","startLine_2","endLine_2","updatedSelection","hasSelection","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","_redoEdit","setState","_undoEdit","__extends","Editor","_recordCurrentState","history","session","textareaId","textareaClassName","autoFocus","disabled","form","maxLength","minLength","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","preClassName","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","editor","dangerouslySetInnerHTML","__html","c","textarea","onChange","_handleChange","_handleKeyDown","autoCapitalize","autoComplete","autoCorrect","spellCheck","Component","textAlign","height","resize","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","border","fontStyle","fontVariantLigatures","letterSpacing","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap"],"sourceRoot":""}