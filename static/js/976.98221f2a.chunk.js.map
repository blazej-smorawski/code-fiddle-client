{"version":3,"file":"static/js/976.98221f2a.chunk.js","mappings":"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","sources":["components/CodeBlock.js","components/PixelsBlock.js","utils/arrays.js","components/CodeSpace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport '../utils/prism-dracula.css';\n\nimport { Sheet, Typography, Badge, Button, Box} from '@mui/joy';\nimport Card from '@mui/joy/Card';\n\n\nfunction CodeBlock(props) {\n    const [code, setCode] = useState(props.code);\n    const result = props.result\n\n    return (\n        <Sheet variant='plain' sx={{width:'100%', height:'100%', display: 'flex', flexDirection:'column', gap:'4px', bgcolor:'transparent', width:'auto'}}>\n            <Badge badgeContent='Kod' color=\"primary\" variant='outlined' anchorOrigin={{vertical: 'top',horizontal: 'left',}}/>\n            <Card variant='soft'>\n                <Editor\n                    value={code}\n                    onValueChange={code => setCode(code)}\n                    highlight={code => highlight(code, languages.js)}\n                    padding={10}\n                    style={{\n                        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                        fontSize: 14,\n                    }}\n                />\n                <Box sx={{ display: 'flex' }}>\n                    <Button\n                    onClick={() => props.runCode(code)}\n                    variant=\"solid\"\n                    size=\"sm\"\n                    color=\"primary\"\n                    aria-label=\"Uruchom\"\n                    sx={{ ml: 'auto', fontWeight: 600 }}\n                    >Uruchom kod</Button>\n                </Box>\n            </Card>\n            <Badge badgeContent='Wynik' color='primary' variant='outlined' anchorOrigin={{vertical: 'top',horizontal: 'left',}}/>\n            <Card variant='soft'>  \n                {result}\n            </Card>\n        </Sheet>\n    );\n}\n\nexport default CodeBlock;","import React, { useState, useEffect } from 'react';\n\nimport Card from '@mui/joy/Card';\nimport Sheet from '@mui/joy/Sheet'\nimport AspectRatio from '@mui/joy/AspectRatio';\n\nconst colors = ['hsl(210 80% 0%)', 'hsl(210 80% 10%)', 'hsl(210 80% 20%)', 'hsl(210 80% 30%)',\n                'hsl(210 80% 30%)', 'hsl(210 80% 40%)', 'hsl(210 80% 50%)', 'hsl(210 80% 60%)']\n\nfunction Pixel(props) {\n    const color = colors[props.color]\n    return (<Card \n        variant='solid' \n        sx={\n            {\n                width:'100%',\n                margin:'2px',\n                bgcolor: color\n            }\n        }\n    />);\n}\n\nfunction PixelsBlock(props) {\n    const grid = <Sheet variant='plain' sx={{width:'100%', height:'100%', display: 'flex', flexDirection:'column', bgcolor:'transparent'}}> {\n        props.pixels.map((row) => \n            <Sheet variant='plain' sx={{width:'100%', height:'100%', display: 'flex', flexDirection:'row', bgcolor:'transparent'}}>\n                {row.map((pixel_value) => <Pixel color={pixel_value}/>)}\n            </Sheet>)\n    } </Sheet>\n    \n    console.log('Grid render?');\n    return (\n        <AspectRatio variant='plain' ratio='1/1'>\n            <Card variant='soft'>\n                {grid}\n            </Card>\n        </AspectRatio>\n    );\n}\n\nexport default PixelsBlock;","export function createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while(i--) arr[length-1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}\n","import CodeBlock from \"./CodeBlock\";\nimport PixelsBlock from \"./PixelsBlock\";\nimport * as utils from \"../utils/arrays\"\n\nimport React, { useState, useEffect } from 'react';\nimport Interpreter from 'js-interpreter';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport LoadingCard from './LoadingCard';\n\nfunction CodeSpace(props) {\n    const [pixels, setPixels] = useState(utils.createArray(8,8));\n    const [pixelsLoaded, setPixelsLoaded] = useState(false);\n    const [resultPixels, setResultPixels] = useState(utils.createArray(8,8));\n    const [result, setResult] = useState('')\n\n    const exampleCode = `\n// Na ten moment dodałem dwie funkcje do manipulacji pixeli.\n// Tablica pixeli to obiekt o nazwie pixels\nwybierz(4,4);\nustawKolor(5);\n\nfor(var x=0;x<8;x++) {\n  wybierz(x,x);\n  ustawKolor(7);\n}\n\nfor(var x=0;x<8;x++) {\n  pixels[x][0]=0;\n}\n`;\n    const preCode = `\nvar pixels = JSON.parse(getPixels());\n// sp - selected pixel - wybrany pixel\nvar sp=[0,0];\n\nfunction wybierz(x,y) {\n    sp[0] = x;\n    sp[1] = y;\n}\n\nfunction ustawKolor(val) {\n    pixels[sp[1]][sp[0]] = val;\n}\n`;\n    const postCode = `\nJSON.stringify(pixels);\n`;\n\n    useEffect( () => {\n        console.log('Pixele');\n        for(var x = 0; x<pixels.length; x++) {\n            for(var y = 0; y<pixels[x].length; y++) {\n                let minimum = 0;\n                let maximum = 7;\n                pixels[x][y] = (Math.random() * (maximum - minimum + 1) ) << 0;\n                resultPixels[x][y] = 0;\n            }\n        }\n        setPixelsLoaded(true);\n    }, []);\n\n    function initInterpreter(interpreter, globalObject) {\n        var wrapper = function getPixels() {\n            console.log(pixels);\n            return JSON.stringify(pixels);\n        };\n        interpreter.setProperty(globalObject, 'getPixels',\n            interpreter.createNativeFunction(wrapper));\n    }\n\n    const runCode = (code) => {\n        console.log('Running: ' + preCode+code+postCode);\n        const interpreter = new Interpreter(preCode+code+postCode, initInterpreter);\n\n        var steps = 0;\n        setResult('Przetwarzam...');\n        try {\n            while(interpreter.step()) {\n                steps++;\n                if(steps>1000) {\n                    setResult('Kod wykonywał się zbyt długo :(');\n                }\n            }\n        } catch (error) {\n            setResult('Błąd: ' + error)\n            return;\n        }\n        console.log('Result: ' + interpreter.value);\n        setResult(\"Sukces!\");\n        setResultPixels(JSON.parse(interpreter.value));\n    }\n\n    return pixelsLoaded ?(\n        <Grid sx={{m: 1 }} container spacing={{ xs: 2, md: 3 }}>\n            <Grid xs={12} sm={3}>\n                <PixelsBlock pixels={pixels}/>\n            </Grid>\n            <Grid xs={12} sm={6}>\n                <CodeBlock code={exampleCode} result={result} runCode={runCode}/>\n            </Grid>\n            <Grid xs={12} sm={3}>\n                <PixelsBlock pixels={resultPixels}/>\n            </Grid>\n        </Grid>\n    ):(\n        <Grid sx={{m: 1 }} container spacing={{ xs: 2, md: 3 }}>\n            <Grid xs={12} sm={3}>\n                <LoadingCard ratio='1/1'/>\n            </Grid>\n            <Grid xs={12} sm={6}>\n                <CodeBlock code={exampleCode} result={result} runCode={runCode}/>\n            </Grid>\n            <Grid xs={12} sm={3}>\n                <LoadingCard ratio='1/1'/>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default CodeSpace"],"names":["props","useState","code","setCode","result","Sheet","variant","sx","width","height","display","flexDirection","gap","bgcolor","Badge","badgeContent","color","anchorOrigin","vertical","horizontal","Card","value","onValueChange","highlight","languages","padding","style","fontFamily","fontSize","Box","Button","onClick","runCode","size","ml","fontWeight","colors","Pixel","margin","grid","pixels","map","row","pixel_value","console","log","AspectRatio","ratio","createArray","length","arr","Array","i","arguments","args","prototype","slice","call","apply","this","utils","pixelsLoaded","setPixelsLoaded","resultPixels","setResultPixels","setResult","exampleCode","preCode","postCode","initInterpreter","interpreter","globalObject","setProperty","createNativeFunction","JSON","stringify","useEffect","x","y","Math","random","Interpreter","steps","step","error","parse","m","container","spacing","xs","md","sm","LoadingCard"],"sourceRoot":""}